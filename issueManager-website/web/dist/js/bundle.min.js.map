{"version":3,"sources":["main/main.js","main/MainController.js","constants/propertiesConstant.js","constants/storageConstant.js","services/AuthenticationService.js","services/Base64Service.js","services/MessageService.js","services/StorageService.js","services/UserService.js","common/login/LoginController.js","features/hello/hello.js","features/home/home.js","templates.js"],"names":["angular","module","app","config","$routeProvider","$locationProvider","$httpProvider","interceptors","push","$q","$rootScope","$location","responseError","rejection","status","method","url","path","error","reject","$cookieStore","$localStorage","request","userToken","console","log","originalPath","isDefined","headers","JSON","stringify","run","UserService","$on","hasRole","role","undefined","user","roles","logout","remove","initialized","controller","$scope","isAuthenticated","then","response","constant","API_URL","USER","AUTH_TOKEN","service","$http","base64Service","storageService","storageConstant","propertiesConstant","login","credentials","d","defer","defaults","common","Authorization","encode","password","params","post","success","accessToken","data","token","resolve","promise","removeSessionItem","keyStr","this","input","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","i","length","charCodeAt","isNaN","charAt","decode","replace","indexOf","String","fromCharCode","errors","alerts","code","message","info","clearError","clearInfo","$window","getLocalItem","key","parse","localStorage","getItem","setLocalItem","item","setItem","removeLocalItem","removeItem","getSessionItem","sessionStorage","setSessionItem","Content-Type","get","when","templateUrl","$","param","put","rememberMe","self","hello","version","document","ready","DataTable","autoFill","$templateCache"],"mappings":"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","file":"bundle.min.js","sourcesContent":["angular.module('templates', []);\r\nvar app = angular.module('app', ['ngRoute', 'ngCookies', 'ngStorage', 'templates']);\r\n\r\napp.config(['$routeProvider', '$locationProvider', '$httpProvider', //\r\n  function($routeProvider, $locationProvider, $httpProvider) {\r\n\r\n  /* Register error provider that shows message on failed requests or redirects to login page on\r\n  * unauthenticated requests */\r\n  $httpProvider.interceptors.push(['$q', '$rootScope', '$location',//\r\n  function ($q, $rootScope, $location) {\r\n    return {\r\n      'responseError': function(rejection) {\r\n        var status = rejection.status;\r\n        var method = rejection.config.method;\r\n        var url = rejection.config.url;\r\n        if (status == 401) {\r\n          $location.path( \"/login\" );\r\n        } else {\r\n          $rootScope.error = method + \" on \" + url + \" failed with status \" + status;\r\n        }         \r\n        return $q.reject(rejection);\r\n      }\r\n    };   \r\n  }]);\r\n        \r\n  /* Registers auth token interceptor, auth token is either passed by header \r\n  * or by query parameter as soon as there is an authenticated user */\r\n  $httpProvider.interceptors.push(['$q', '$rootScope', '$location', '$cookieStore',//\r\n  '$localStorage', function ($q, $rootScope, $location, $cookieStore, $localStorage) {\r\n    return {\r\n      'request': function(config) {\r\n\r\n        var userToken = $localStorage.userToken;\r\n        console.log(userToken);\r\n\r\n        /* Try getting valid user from cookie or go to login page */\r\n        var originalPath = $location.path();\r\n        $location.path(\"/login\");\r\n        if (angular.isDefined(userToken) && userToken!== null) {\r\n          /*\r\n          UserService.get(function(user) {\r\n            $rootScope.user = user;\r\n            $location.path(originalPath);\r\n          });\r\n          */\r\n          $location.path(originalPath);\r\n        }\r\n\r\n\r\n        if (angular.isDefined(userToken)) {\r\n          config.headers['X-AUTH-TOKEN'] = JSON.stringify(userToken);\r\n        }\r\n        if (angular.isDefined(userToken) && $location.path() === '/login') {\r\n          $location.path('/');  \r\n        }\r\n\r\n        return config;\r\n      }\r\n    };\r\n  }]);  \r\n}]);\r\n\r\napp.run(['$rootScope', '$location', '$cookieStore', 'UserService', function($rootScope, $location, $cookieStore, UserService) {\r\n    \r\n  /* Reset error when a new view is loaded */\r\n  $rootScope.$on('$viewContentLoaded', function() {\r\n    delete $rootScope.error;\r\n  });\r\n  \r\n  $rootScope.hasRole = function(role) {     \r\n    if ($rootScope.user === undefined) {\r\n      return false;\r\n    }   \r\n    if ($rootScope.user.roles[role] === undefined) {\r\n      return false;\r\n    }    \r\n    return $rootScope.user.roles[role];\r\n  };\r\n  \r\n  $rootScope.logout = function() {\r\n    delete $rootScope.user;\r\n    delete $rootScope.userToken;\r\n    $cookieStore.remove('userToken');\r\n    $location.path(\"/login\");\r\n  };\r\n   \r\n  $rootScope.initialized = true;\r\n}]);\r\n","app.controller('MainController', ['$scope', '$cookieStore', //\r\n'UserService', '$location', '$rootScope', '$localStorage', //\r\nfunction ($scope, $cookieStore, UserService, $location, $rootScope, $localStorage) {\r\n\r\n  $scope.isAuthenticated = function() {\r\n    var userToken = $localStorage.userToken;\r\n    return (angular.isDefined(userToken) && userToken !== null);\r\n  };\r\n\r\n  $scope.logout = function() {\r\n    UserService.logout().then(function (response) {\r\n      delete $rootScope.userToken;\r\n      delete $localStorage.userToken;\r\n      $location.path(\"/login\");      \r\n    });\r\n  };\r\n}]);","'use strict';\n\napp.constant('propertiesConstant', {\n  API_URL: 'http://127.0.0.1:8080/issueManager-services'\n});","'use strict';\n\napp.constant('storageConstant', {\n  USER: 'user',\n  AUTH_TOKEN: 'authToken'\n});","'use strict';\r\n\r\napp.service('authenticationService', ['$rootScope', '$http', '$q', 'base64Service',//\r\n'storageService', 'storageConstant', 'propertiesConstant',// \r\nfunction ($rootScope, $http, $q, base64Service, storageService, storageConstant, propertiesConstant) {\r\n  \r\n  var login = function (credentials) {\r\n    var d = $q.defer();\r\n    $http.defaults.headers.common.Authorization = 'Basic ' + \r\n    base64Service.encode(credentials.login + ':' + credentials.password);\r\n    var params = {login: credentials.login, password: credentials.password};\r\n    $http.post(propertiesConstant.API_URL + '/auth/login', params)\r\n    .success(function (response) {\r\n      var accessToken = response.data.token;\r\n      $rootScope.accessToken = accessToken;\r\n      d.resolve();\r\n    })\r\n    .error(function () {\r\n      d.reject();\r\n    });\r\n    return d.promise;\r\n  };\r\n\r\n  var logout = function () {\r\n    var d = $q.defer();\r\n    $http.post(propertiesConstant.API_URL + '/auth/logout', null)\r\n    .success(function () {\r\n      storageService.removeSessionItem(storageConstant.AUTH_TOKEN);\r\n      storageService.removeSessionItem(storageConstant.USER);\r\n      delete $rootScope.user;\r\n      d.resolve();\r\n    })\r\n    .error(function () {\r\n      d.reject();\r\n    });\r\n    return d.promise;\r\n  };\r\n\r\n  return {\r\n    login: login,\r\n    logout: logout\r\n  }\r\n}]);","'use strict';\r\n\r\napp.service('base64Service', function () {\r\n    var keyStr = \"ABCDEFGHIJKLMNOP\" +\r\n        \"QRSTUVWXYZabcdef\" +\r\n        \"ghijklmnopqrstuv\" +\r\n        \"wxyz0123456789+/\" +\r\n        \"=\";\r\n    this.encode = function (input) {\r\n        var output = \"\",\r\n            chr1, chr2, chr3 = \"\",\r\n            enc1, enc2, enc3, enc4 = \"\",\r\n            i = 0;\r\n\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n\r\n            output = output +\r\n            keyStr.charAt(enc1) +\r\n            keyStr.charAt(enc2) +\r\n            keyStr.charAt(enc3) +\r\n            keyStr.charAt(enc4);\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    this.decode = function (input) {\r\n        var output = \"\",\r\n            chr1, chr2, chr3 = \"\",\r\n            enc1, enc2, enc3, enc4 = \"\",\r\n            i = 0;\r\n\r\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n        while (i < input.length) {\r\n            enc1 = keyStr.indexOf(input.charAt(i++));\r\n            enc2 = keyStr.indexOf(input.charAt(i++));\r\n            enc3 = keyStr.indexOf(input.charAt(i++));\r\n            enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n            output = output + String.fromCharCode(chr1);\r\n\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        }\r\n    };\r\n});","'use strict';\r\n\r\napp.service('messageService', ['$rootScope', function ($rootScope) {\r\n    $rootScope.errors = [];\r\n    $rootScope.alerts = [];\r\n\r\n    this.error = function (code, message) {\r\n        $rootScope.errors.push({ code: code, message: message });\r\n    };\r\n\r\n    this.info = function (code, message) {\r\n        $rootScope.alerts.push({ code: code, message: message });\r\n    };\r\n\r\n    this.clearError = function () {\r\n        $rootScope.errors = [];\r\n    };\r\n\r\n    this.clearInfo = function () {\r\n        $rootScope.alerts = [];\r\n    }\r\n}]);","'use strict';\r\n\r\napp.service('storageService', ['$rootScope', '$window', function ($rootScope, $window) {\r\n    this.getLocalItem = function (key) {\r\n        return JSON.parse($window.localStorage.getItem(key));\r\n    };\r\n\r\n    this.setLocalItem = function (key, item) {\r\n        $window.localStorage.setItem(key, JSON.stringify(item));\r\n    };\r\n\r\n    this.removeLocalItem = function(key) {\r\n        $window.localStorage.removeItem(key);\r\n    };\r\n\r\n    this.getSessionItem = function (key) {\r\n        return JSON.parse($window.sessionStorage.getItem(key));\r\n    };\r\n\r\n    this.setSessionItem = function (key, item) {\r\n        $window.sessionStorage.setItem(key, JSON.stringify(item));\r\n    };\r\n\r\n    this.removeSessionItem = function(key) {\r\n        $window.sessionStorage.removeItem(key);\r\n    }\r\n}]);","'use strict';\r\n\r\napp.service('UserService', ['propertiesConstant', '$http', //\r\n  function (propertiesConstant, $http) {\r\n  \r\n  var login = function(credentials) {\r\n    var url = propertiesConstant.API_URL + '/authentication/login';\r\n    return $http({\r\n      method: 'POST',\r\n      url: url,\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n      data: credentials\r\n    });\r\n  };\r\n\r\n  var get = function() {\r\n    return $http.get(propertiesConstant.API_URL + '/authentication/current');\r\n  };\r\n\r\n  var logout = function () {\r\n    var url = propertiesConstant.API_URL + '/authentication/logout';\r\n    return $http.get(url);\r\n  }; \r\n\r\n  return{\r\n    login: login,\r\n    get: get,\r\n    logout: logout\r\n  }\r\n}]);","'use strict';\r\napp.config(['$routeProvider',function($routeProvider) {\r\n  $routeProvider\r\n  .when(\"/login\", {\r\n    templateUrl : \"common/login/login.html\"\r\n  })\r\n}]);\r\napp.controller('LoginController', ['$location', '$rootScope', '$scope', //\r\n'UserService', '$cookieStore', '$localStorage', //\r\nfunction ($location, $rootScope, $scope, UserService, $cookieStore, $localStorage) {\r\n\r\n  $scope.credentials = {};\r\n  $scope.login = function () {\r\n    var data = $.param({login: $scope.credentials.login, password: $scope.credentials.password});  \r\n    console.log('data', data);\r\n    UserService.login(data).then(function(response) { \r\n      var userToken = response.data;\r\n      $localStorage.userToken = userToken;\r\n      $cookieStore.put('userToken', userToken);\r\n      if ($scope.rememberMe) {\r\n        $cookieStore.put('userToken', userToken);\r\n      }\r\n      $location.path(\"/\");\r\n      /*\r\n      UserService.get(function(user) {\r\n        $rootScope.user = user;\r\n        $location.path(\"/\");\r\n      });\r\n      */\r\n    });\r\n  };\r\n}]);","app.config(['$routeProvider',function($routeProvider) {\r\n  $routeProvider\r\n  .when(\"/hello\", {\r\n    templateUrl : \"features/hello/hello.html\"\r\n  })\r\n}]);\r\napp.controller('HelloCtrl', ['$scope', '$http', function($scope, $http) {\r\n  var self = $scope;\r\n  self.hello = 'hello world';\r\n  self.version = null;\r\n\r\n  var getVersion = function() {\r\n  \t$http.get('http://127.0.0.1:8080/issueManager-services/appSetting/version').then(function(response) {\r\n      self.version = response.data;\r\n  \t});\r\n  };\r\n\r\n  //getVersion();\r\n\r\n  $(document).ready(function() {\r\n    var table =  $('#example').DataTable({\r\n      autoFill: false\r\n    });\r\n  });\r\n\r\n}]);\r\n","app.config(['$routeProvider',function($routeProvider) {\r\n  $routeProvider\r\n  .when(\"/\", {\r\n    templateUrl : \"features/home/home.html\"\r\n  })\r\n}]);\r\napp.controller('HomeController', ['$scope', '$http', function($scope, $http) {\r\n  var self = $scope;\r\n}]);",null]}